---
import palettez from 'palettez/raw?raw'
import { ClientThemeSelect } from './_client-theme-select'
import './_style.css'
---

<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta
      name='viewport'
      content='width=device-width,initial-scale=1'
    />
    <title>Demo with Astro</title>
    <script is:inline set:html={palettez} />
    <script is:inline>
      ;(async () => {
        const p = window.palettez.create({
          config: {
            colorScheme: {
              label: 'Color scheme',
              options: {
                system: {
                  value: 'System',
                  isDefault: true,
                  media: {
                    query: '(prefers-color-scheme: dark)',
                    ifMatch: 'dark',
                    ifNotMatch: 'light',
                  },
                },
                light: { value: 'Light' },
                dark: { value: 'Dark' },
              },
            },
            contrast: {
              label: 'Contrast',
              options: {
                standard: { value: 'Standard', isDefault: true },
                high: { value: 'High' },
              },
            },
          }
        })

        p.subscribe((_, resolvedThemes) => {
          for (const [theme, optionKey] of Object.entries(resolvedThemes)) {
            document.documentElement.dataset[theme] = optionKey
          }
        })

        await p.restore()

        p.sync()
      })()
    </script>
  </head>
  <body>
    <main>
      <h1>Client only persistence</h1>
      <p>
        - User's preferred themes are persisted in localStorage.
        <br />- Theme change are synced with other windows and tabs via
        storage event.
      </p>
      <ClientThemeSelect client:only="react" />
      <br />
      <a href="/">
        Client only persistence &rarr;
      </a>
      <br />
      <a href="/client-server">
        Client & server persistence &rarr;
      </a>
    </main>
  </body>
</html>
