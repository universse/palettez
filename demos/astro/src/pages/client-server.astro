---
import { ThemeSelect } from './_theme-select'

import './_style.css'

export const prerender = false

let themes: {
  colorScheme: string
  contrast: string
}

try {
  themes = Astro.cookies.get('palettez')?.json() || {
    colorScheme: 'system',
    contrast: 'standard',
  }
} catch {
  themes={
    colorScheme: 'system',
    contrast: 'standard',
  }
}

if (Astro.request.method === 'POST') {
  const data = await Astro.request.formData()
  
  themes = {
    colorScheme: data.get('colorScheme') as string,
    contrast: data.get('contrast') as string,
  }
  
  Astro.cookies.set('palettez', themes, {
    path: '/',
    httpOnly: true,
    secure: true,
    sameSite: 'strict',
  })
}
---

<html
  lang='en'
  data-color-scheme={themes.colorScheme}
  data-contrast={themes.contrast}
>
  <head>
    <meta charset='UTF-8' />
    <meta
      name='viewport'
      content='width=device-width,initial-scale=1'
    />
    <title>Demo with Astro</title>
  </head>
  <body>
    <main>
      <h1>Client & server persistence</h1>
      <p>
        - User's preferred themes are persisted in cookies on the server and in
        memory on the client.
        <br />- Theme change can be previewed but is only saved upon form
        submission.
      </p>
      <form method='post'>
        <ThemeSelect persistedServerThemes={themes} client:load />
        <button type='submit'>Save</button>
      </form>
      <br />
      <a href='/'> Client only persistence &rarr; </a>
      <br />
      <a href='/client-server'> Client & server persistence &rarr; </a>
    </main>
  </body>
</html>
