---
import { type ThemeConfig, getThemesAndOptions } from 'palettez'
import palettez from 'palettez/raw?raw'
import { createStoresScript } from './_multi-store-scripts'
import { ThemeSelect } from './_sync-theme-select'
import { ThemeWrapper } from './_sync-theme-wrapper'
import './_style.css'

export const prerender = false

const config = {
	colorScheme: [
		{
			value: 'system',
			media: ['(prefers-color-scheme: dark)', 'dark', 'light'],
		},
		'light',
		'dark',
	],
	contrast: ['standard', 'high'],
} as const satisfies ThemeConfig

const themeStoreKeys = ['app', 'section1', 'section2']

const themesAndOptions = getThemesAndOptions(config)

const defaultTheme = {
	colorScheme: 'system',
	contrast: 'standard',
}

const initialThemesByKey = themeStoreKeys.reduce((acc, key) => {
  try {
    acc[key] = Astro.cookies.get(key).json()
  } catch {
    acc[key] = defaultTheme
  }
  return acc
}, {})


if (Astro.request.method === 'POST') {
  const data = await Astro.request.formData()

  const key = data.get('key') as string

  initialThemesByKey[key] = {
    colorScheme: data.get('colorScheme') as string,
    contrast: data.get('contrast') as string,
  }
  
  Astro.cookies.set(key, initialThemesByKey[key], {
    path: '/multi-store-with-server-persistence',
    httpOnly: true,
    secure: true,
    sameSite: 'strict',
    maxAge: 600,
  })
}

const scriptArgs = JSON.stringify({ initialThemesByKey, config })
const script = `${palettez}
(${createStoresScript.toString()})(${scriptArgs})`
---

<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta
      name='viewport'
      content='width=device-width,initial-scale=1'
    />
    <title>Palettez Astro Demo</title>
  </head>
  <body>
    <script is:inline set:html={script} />
    <ThemeWrapper client:load storeKey='app'>
      <main>
        <h1>Multi-store with server persistence</h1>
        <p>
          - User's preferred themes are persisted in cookies on the server and
          in memory on the client
          <br />- Theme selection is only saved upon form submission
          <br />- To avoid the flashing of wrong theme value, consider putting it in a dropdown menu, or rendering multiple sets and use CSS to show the correct one based on the theme wrapper's attributes
        </p>
        <form autocomplete='off' method='post'>
          <ThemeSelect
            client:load 
            storeKey='app'
            themesAndOptions={themesAndOptions}
          />
          <button type='submit'>Save</button>
        </form>
        <br />
        <p>These 2 sections read from the same theme store</p>
        <div style="display: flex; gap: 16px">
          <ThemeWrapper client:load storeKey='section1'>
            <form autocomplete='off' method='post'>
              <ThemeSelect
                client:load
                storeKey='section1'
                themesAndOptions={themesAndOptions}
              />
              <button type='submit'>Save</button>
            </form>
          </ThemeWrapper>
          <ThemeWrapper client:load storeKey='section1'>
            <form autocomplete='off' method='post'>
              <ThemeSelect
                client:load
                storeKey='section1'
                themesAndOptions={themesAndOptions}
              />
              <button type='submit'>Save</button>
            </form>
          </ThemeWrapper>
        </div>
        <br />
        <ThemeWrapper client:load storeKey='section2'>
          <form autocomplete='off' method='post'>
            <ThemeSelect
              client:load
              storeKey='section2'
              themesAndOptions={themesAndOptions}
            />
            <button type='submit'>Save</button>
          </form>
        </ThemeWrapper>

        <br />
        <p>
          <b>Demo links</b>
        </p>
        <a href='/'>Basic usage &rarr;</a>
        <br />
        <a href='/multi-store-with-server-persistence'>
          Multi-store with server persistence &rarr;
        </a>
        <br />
        <a href='/no-hydration-mismatch'>
          Multi-store with no hydration mismatch &rarr;
        </a>
      </main>
    </ThemeWrapper>
  </body>
</html>
